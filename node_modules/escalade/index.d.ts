<<<<<<< HEAD
declare module 'escalade' {
	type Promisable<T> = T | Promise<T>;
	export type Callback = (directory: string, files: stirng[]) => Promisable<string | false | void>;
	function escalade(directory: string, callback: Callback): Promise<string | void>;
	export = escalade;
}

declare module 'escalade/sync' {
	export type Callback = (directory: string, files: stirng[]) => string | false | void;
	function escalade(directory: string, callback: Callback): string | void;
	export = escalade;
}
=======
type Promisable<T> = T | Promise<T>;

declare namespace escalade {
	export type Callback = (
		directory: string,
		files: string[],
	) => Promisable<string | false | void>;
}

declare function escalade(
	directory: string,
	callback: escalade.Callback,
): Promise<string | void>;

export = escalade;
>>>>>>> develop-sw
